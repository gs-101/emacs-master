name: Update Emacs

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"

jobs:
  update-emacs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout Repository
      id: checkout
      uses: actions/checkout@v4
    - name: Install Dependencies
      id: dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y curl grep guix git gpg guile-3.0 guile-library
    - name: Update Emacs
      id: update
      run: |
        chmod +x bin/get_hash.sh
        chmod +x bin/update-emacs.scm
        bin/update-emacs.scm
    - name: Import GPG Key
      run: echo "$GPG_KEY" | base64 --decode | gpg --batch --import
      env:
        GPG_KEY: ${{ secrets.GPG_KEY }}
    - name: Custom GPG Signing Program
      run: |
        rm -rf /tmp/gpg.sh
        echo "#!/bin/bash" >> /tmp/gpg.sh
        echo "gpg --batch --pinentry-mode=loopback --passphrase \$GPG_KEY_PASSPHRASE \"\$@\"" >> /tmp/gpg.sh
        chmod +x /tmp/gpg.sh
      env:
        GPG_KEY_PASSPHRASE: ${{ secrets.GPG_KEY_PASSPHRASE }}
    - name: Setup Git
      run: |
        git config commit.gpgsign true
        git config user.signingkey $GPG_KEY_ID
        git config gpg.program /tmp/gpg.sh
      env:
        GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Commit
      id: commit
      run: |
        git add emacs-master.scm
        emacs_commit=$(grep "(define emacs-master-commit" emacs-master.scm | awk '{print $3}' | cut -c 2-41)
        git commit -m "feat (emacs-master.scm): Update Emacs to $emacs_commit" --gpg-sign=$GPG_KEY_ID
        git push --set-upstream origin main
      env:
       GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
       GPG_KEY_PASSPHRASE: ${{ secrets.GPG_KEY_PASSPHRASE }}
       GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMITTER_NAME }}
       GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
       GIT_AUTHOR_NAME: github-actions
       GIT_AUTHOR_EMAIL: github-actions@example.com
